// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id      Int      @id @default(autoincrement())
  stUsername   String   @unique
  stPasswordHash String
  stRole       UserRole @default(USER)
  dtCreatedAt  DateTime @default(now())
  dtUpdatedAt  DateTime @updatedAt

  sessions Session[]
}

model Session {
  id String @id
  userId Int
  expiresAt DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tender {
  id                  Int          @id @default(autoincrement())
  stVoucherNumber     DateTime     
  stTenderName        String
  stTenderType        String  // single stone, rough lot, multi lot, mix lot
  dcNotePercentage    Float  
  stLotNo             String
  stRoughName         String
  inTotalRoughPcs     Int 
  dcTotalRoughCts     Float?
  dcRoughSize         Float?
  dcRoughPrice        Float?
  dcRoughTotal        Float?

  dcBidPrice          Float
  dcResultCost        Float
  dcFinalCostPrice    Float
  dcTotalAmount       Float
  dcResultPerCt       Float
  dcFinalBidPrice     Float
  
  dcResultTotal       Float
  dcFinalTotalAmount  Float

  dtCreatedAt          DateTime @default(now())
  dtUpdatedAt          DateTime @updatedAt
  tenderDetails        TenderDetailsTable[]
}


model TenderDetailsTable {
  id                Int          @id @default(autoincrement())
  tender            Tender       @relation(fields: [tenderId], references: [id], onDelete: Cascade)
  tenderId          Int
  inRoughPcs        Int
  dcRoughCts        Float
  color             Color        @relation(fields: [colorId], references: [id], onDelete: Cascade)
  colorId           Int          @unique
  clarity           Clarity      @relation(fields: [clarityId], references: [id], onDelete: Cascade)
  clarityId         Int          @unique
  flourence         Flourence    @relation(fields: [flourenceId], references: [id], onDelete: Cascade)
  flourenceId       Int          @unique
  shape             Shape        @relation(fields: [shapeId], references: [id], onDelete: Cascade)
  shapeId           Int          @unique
  stColorGrade      String
  dcPolCts          Float
  dcPolPer          Float
  dcDepth           Float?
  dcTable           Float?
  dcRatio           Float?
  dcSellPrice       Float
  dcCostPrice       Float
  stDescription     String?      @db.Text
  dtCreatedAt       DateTime @default(now())
  dtUpdatedAt       DateTime @updatedAt
}

model MainLot {
  id          Int             @id @default(autoincrement())
  stName        String
  stRemarks     String? @db.Text
  inPcs         Int
  stCts         String
  dcRate        Float 
  dcAmount      Float 
  dtCreatedAt   DateTime @default(now())
  dtUpdatedAt   DateTime @updatedAt
}

model Color {
  id          Int     @id @default(autoincrement())
  stName        String
  stShortName   String
  inSerial      Int
  dtCreatedAt   DateTime @default(now())
  dtUpdatedAt   DateTime @updatedAt
  tenderDetils  TenderDetailsTable?
}

model Clarity {
  id          Int     @id @default(autoincrement())
  stName        String
  stShortName   String
  inSerial      Int
  dtCreatedAt   DateTime @default(now())
  dtUpdatedAt   DateTime @updatedAt
  tenderDetils  TenderDetailsTable?
}


model Fluorescence {
  id          Int     @id @default(autoincrement())
  stName        String
  stShortName   String  
  inSerial      Int
  dtCreatedAt   DateTime @default(now())
  dtUpdatedAt   DateTime @updatedAt
  tenderDetils  TenderDetailsTable?
}

model Shape {
  id          Int     @id @default(autoincrement())
  stName        String
  stShortName   String
  inSerial      Int
  dtCreatedAt   DateTime @default(now())
  dtUpdatedAt   DateTime @updatedAt
  tenderDetils  TenderDetailsTable?
}

